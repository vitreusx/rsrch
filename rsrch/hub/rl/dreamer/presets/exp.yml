exp:
  debug:
    $extends: [dreamer.atari, atari.base]
    stages:
      - prefill:
          until: 20e3
      - do_val_epoch:
          num_episodes: 4
      - do_opt_step
      - do_wm_opt_step
      - do_rl_opt_step
      - check_plasticity
      - pretrain:
          stop_criteria:
            rel_patience: 0.5
            margin: 0.0
            max_steps: 128
          val_on_loss_improv: 0.2
          val_every: 1024
          max_val_batches: 128
          rl_opt_freq: 0
      - reset_wm:
          match_params: .*
          shrink_coef: 0.0
          pretrain: ~
      - reset_rl:
          match_params: .*
          shrink_coef: 0.0
          pretrain: ~
      - do_env_step

  sanity_check:
    $extends: [dreamer.atari, atari.base]
    stages:
      - prefill:
          until: 200e3
      - train_loop:
          until: 5e6
          tasks:
            - do_val_epoch: ~
              every: 1e6
            - do_opt_step: ~
              every:
                n: 64
                accumulate: true
            - do_env_step
  ratio_val_test:
    $extends: [dreamer.atari, atari.base]
    _freq: 64
    data.val_frac: 0.15
    stages:
      - prefill:
          until: ${max(3e3 * _freq, 20e3)}
      - train_loop:
          until: ${max(1e5 * _freq, 400e3)}
          tasks:
            - do_val_epoch: ~
              every: ${max(5e3 * _freq, 20e3)}
            - do_val_step: ~
              every: { n: 16, of: wm_opt_step }
            - do_opt_step: ~
              every:
                n: ${_freq}
                accumulate: true
            - do_env_step
      - save_ckpt:
          full: false
          tag: final
  at_400k:
    $extends: [dreamer.atari, atari.base]
    _freq: 64
    _prefill: 20e3
    data.val_frac: 0.15
    stages:
      - prefill:
          until: ${_prefill}
      - train_loop:
          until: 400e3
          tasks:
            - do_val_epoch: ~
              every: 20e3
            - do_val_step: ~
              every: { n: 16, of: wm_opt_step }
            - do_opt_step: ~
              every:
                n: ${_freq}
                accumulate: true
            - do_env_step
      - save_ckpt:
          full: false
          tag: final
  sr_sac:
    $extends: [no_model, sac.mujoco, dmc.proprio]
    _updates_per_step: 1
    _reset_interval: 2.56e6
    profile.functions: [do_rl_opt_step]
    env:
      type: dmc
      dmc:
        domain: walker
        task: walk
        frame_skip: 1
        obs_type: proprio_flat
    rl.sac:
      opt:
        $replace: true
        type: adam
        lr: 3e-4
        betas: [0.9, 0.999]
        eps: 1.5e-4
      actor:
        encoder:
          type: box
          box:
            hidden: 256
            layers: 2
            act: relu
      qf:
        encoder: ${..actor.encoder}
        polyak:
          every: 1
          tau: 0.995
      gamma: 0.99
    data:
      capacity: 1e6
      loaders.slices_rl:
        batch_size: 256
        slice_len: 2
    stages:
      - prefill:
          until: 5e3
      - train_loop:
          until: 500e3
          tasks:
            - do_val_epoch: ~
              every: 50e3
            - do_rl_val_step: ~
              every: { n: 16, of: rl_opt_step }
            - reset_rl: ~
              every:
                n: ${_reset_interval}
                of: rl_opt_step
            - do_rl_opt_step:
                n: ${_updates_per_step}
            - do_env_step
  split_freq:
    $extends: [dreamer.atari, atari.base]
    _wm_freq: 4
    _rl_freq: 4
    _prefill: 40e3
    data.val_frac: 0.15
    stages:
      - prefill:
          until: ${_prefill}
      - train_loop:
          until: 400e3
          tasks:
            - do_val_epoch: ~
              every: 20e3
            - do_wm_val_step: ~
              every: { n: 16, of: wm_opt_step }
            - do_rl_val_step: ~
              every: { n: 16, of: rl_opt_step }
            - do_wm_opt_step: ~
              every:
                n: ${_wm_freq}
                accumulate: true
            - do_rl_opt_step: ~
              every:
                n: ${_rl_freq}
                accumulate: true
            - do_env_step
      - save_ckpt:
          full: false
          tag: final
  ppo_alpha:
    $extends: [ppo.atari]
    rl.ppo.alpha:
      adaptive: true
      value: 1.0
      target: auto
      auto_coefs: { disc: 0.75, cont: 5e-2 }
      opt:
        type: adam
        lr: ${ppo.opt.lr}
        eps: 1e-4
  dreamer_ppo:
    $extends: [dreamer.atari]
    rl:
      loader: dreamer_rl
      type: ppo
      ppo:
        encoder:
          type: box
          box: ${_.mlp}
        actor_dist:
          type: auto
        adv_norm: true
        clip_vloss: true
        vf_coef: 0.5
        clip_grad: 0.5
        gamma: 0.99
        gae_lambda: 0.95
        share_encoder: true
        update_epochs: 8
        update_batch: 1024
        opt:
          type: adam
          lr: 3e-4
        clip_coef: 0.2
        alpha:
          adaptive: true
          value: 1.0
          target: auto
          auto_coefs: { disc: 0.75, cont: 5e-2 }
          opt:
            type: adam
            lr: ${ppo.opt.lr}
            eps: 1e-4
    stages:
      - prefill:
          until: 50e3
      - train_loop:
          until: 5e6
          tasks:
            - do_val_epoch: ~
              every: 1e6
            - do_opt_step: ~
              every:
                n: 64
                accumulate: true
            - do_env_step
  pretrain_wm:
    $extends: [dreamer.atari, atari.base]
    _freq: 64
    _prefill: 40e3
    data.val_frac: 0.15
    stages:
      - prefill:
          until: ${_prefill}
      - train_wm:
          stop_criteria:
            rel_patience: 0.5
            margin: 0.0
            min_steps: 1024
          val_on_loss_improv: 0.2
          val_every: 1024
          max_val_batches: 128
      - train_loop:
          until: 400e3
          tasks:
            - do_val_epoch: ~
              every: 20e3
            - do_val_step: ~
              every: { n: 16, of: wm_opt_step }
            - do_opt_step: ~
              every:
                n: ${_freq}
                accumulate: true
            - do_env_step
      - do_val_epoch: ~
      - save_ckpt:
          full: false
          tag: final
  heavy_priming:
    $extends: [sanity_check]
    stages:
      - prefill:
          until: 20e3
      - train_loop:
          until: { n: 100e3, of: wm_opt_step }
          tasks: [do_opt_step]
      - prefill:
          until: 200e3
      - train_loop:
          until: 5e6
          tasks:
            - do_val_epoch: ~
              every: 1e6
            - do_opt_step: ~
              every:
                n: 64
                accumulate: true
            - do_env_step
