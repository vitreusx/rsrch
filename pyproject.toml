[tool.poetry]
name = "rsrch"
version = "0.1.0"
description = ""
authors = ["vitreusx <jakub_bednarz@protonmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "3.10.*"
poetry = "^1.5"
ipykernel = "^6.22.0"
ipywidgets = "^8.0.4"
setuptools = "*"
tensorboard = "^2.12.2"
torch-tb-profiler = "^0.4.1"
colorama = "*"
moviepy = "*"
python-slugify = "*"
patchelf = "^0.17.2.1"
mujoco = "<=2.3.3"
ptflops = "^0.7"
h5py = "^3.8.0"
sympy = "^1.12"
torch = "^2.1"
torchvision = "^0.16"
gymnasium = { version = "^0.28.1", extras = ["accept-rom-license", "all"] }
poethepoet = "^0.21.0"
wandb = "^0.15.5"
plotly = "^5.15.0"
dacite = "^1.8.1"
mako = "^1.2.4"
envpool = "^0.8.3"
cython = "<3"
box2d-py = { path = "ext/box2d-py" }
black = { version = "^23.3.0", extras = ["jupyter"] }
nbconvert = "^7.3.1"
pylint = "^2.17.4"
isort = ">=5"
poetry-plugin-export = "^1.6.0"

[tool.poe.tasks.gpu-setup]
help = "Set up the environment for use with GPUs."
shell = """
  export TORCH=$(\
    poetry export -f requirements.txt \
    | grep -E "^torch==[^ ]*" -o)
  export TORCHVISION=$(\
    poetry export -f requirements.txt \
    | grep -E "^torchvision==[^ ]*" -o)
  pip install -U ${TORCH}+${cuda} ${TORCHVISION}+${cuda} \
    --index-url https://download.pytorch.org/whl/${cuda}
"""
args = [{ name = "cuda", default = "cu118" }]

[tool.poe.tasks.fix-opencv]
help = "Replace opencv-python with headless version."
shell = """
  export OPENCV=$(\
    poetry export -f requirements.txt \
    | grep -E "opencv-python==[^ ]*" -o \
    | sed -E 's/opencv-python==(.*)/\\1/')
  pip uninstall -y opencv-python
  pip install -U opencv-python-headless==${OPENCV}
"""

[tool.poe.tasks.wandb]
help = "Start or stop a local Weights and Biases server."
shell = """
  if [ "$(docker ps -a | grep wandb-local)" ]; then
    wandb server stop
  else
    wandb server start -p ${port}
  fi
"""
args = [{ name = "port", default = "8081" }]

[build-system]
requires = ["poetry-core>=1.5"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88

[tool.isort]
profile = "black"

[tool.pylint.format]
max-line-length = "88"

[tool.pylint."MESSAGES CONTROL"]
disable = "invalid-name,missing-module-docstring"

[tool.pylint.TYPECHECK]
generated-members = "numpy.*, torch.*, np.*"
